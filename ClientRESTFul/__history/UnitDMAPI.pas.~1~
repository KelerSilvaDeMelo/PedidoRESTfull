unit UnitDMAPI;

interface

uses
  System.SysUtils, System.Classes, System.IniFiles, IdHTTP, IdSSLOpenSSL, Vcl.Dialogs, ClientConstsPedido;

type
  TdmAPI = class(TDataModule)
    procedure DataModuleCreate(Sender: TObject);

  private
    FServerHost: string;
    FServerPort: string;

  private
    procedure ConectaAPI;
    procedure LerConfigIni;

  public
    procedure TestarConexao;
  end;

var
  dmAPI: TdmAPI;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{--------------------------------[ CONSTRUÇÃO ]--------------------------------}
procedure TdmAPI.DataModuleCreate(Sender: TObject);
begin
  Self.ConectaAPI;
end;

{---------------------------------[ PRIVADO ]----------------------------------}
procedure TdmAPI.ConectaAPI;
begin
  Self.LerConfigIni;
  Self.TestarConexao;
end;

{ Ler as configurações do arquivo client_config.ini }
procedure TdmAPI.LerConfigIni;
var
  Ini: TIniFile;
  ConfigFilePath: string;
begin
  ConfigFilePath := ExtractFilePath(ParamStr(0)) + 'client_config.ini';
  Ini := TIniFile.Create(ConfigFilePath);
  try
    if not FileExists(ConfigFilePath) then
    begin
      Ini.WriteString('Servidor', 'Host', BASE_HOST);
      Ini.WriteString('Servidor', 'Porta', BASE_PORT);
    end;

    Self.FServerHost := Ini.ReadString('Servidor', 'Host', BASE_HOST);
    Self.FServerPort := Ini.ReadString('Servidor', 'Porta', BASE_PORT);
  finally
    Ini.Free;
  end;
end;

{ Testa a conexão com o servidor }
procedure TdmAPI.TestarConexao;
var
  HTTPClient: TIdHTTP;
  SSLHandler: TIdSSLIOHandlerSocketOpenSSL;
  Url: string;
  Resposta: string;
begin
  try
    HTTPClient := TIdHTTP.Create(nil);
    SSLHandler := TIdSSLIOHandlerSocketOpenSSL.Create(nil);
    HTTPClient.IOHandler := SSLHandler;

    // Atualize a URL para o endpoint correto /APIStatus
    Url := Format('http://%s:%s/APIStatus', [FServerHost, FServerPort]);
    try
      Resposta := HTTPClient.Get(Url);
//      ShowMessage('Servidor conectado com sucesso: ' + Resposta);
    except
      on E: Exception do
        ShowMessage('Erro ao conectar com o servidor de aplicação: ' + E.Message);
    end;
  finally
    HTTPClient.IOHandler := nil;
    SSLHandler.Free;
    HTTPClient.Free;
  end;
end;

end.

